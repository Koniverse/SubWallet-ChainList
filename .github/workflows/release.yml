name: Publish Build
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build_and_publish:
    if: "startsWith(github.event.head_commit.message, '[Release]') || github.event_name == 'pull_request'"
    runs-on: ubuntu-22.04
    name: Build and publish
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_AUTOMATION_TOKEN }}

      - name: Set input data
        id: check_params
        run: |
          # Define branch
          BRANCH=${{ github.head_ref || github.ref_name }}
          echo "Branch: $BRANCH"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

          # Version
          VERSION=$(node -p -e "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Get PR number from event payload, default to 0 if not available
          PR_NUMBER=${{ github.event.number || 0 }}
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV

          # Set build ref
          VERSION_FLAG=$(echo "${{ github.event.pull_request.head.sha || github.event.head_commit.id }}" | cut -c1-8)
          FINAL_VERSION=${VERSION}
          if [[ ${{ github.ref }} == 'refs/heads/master' || ${{ github.ref }} == 'refs/heads/dev' ]]; then
              FINAL_VERSION=${VERSION}
          else
              FINAL_VERSION="${VERSION}-pr-${{ github.event.number }}-${VERSION_FLAG}"
          fi
          echo "final_version=$FINAL_VERSION" >> $GITHUB_OUTPUT

          # Set release target
          if [[ ${{ github.ref }} == 'refs/heads/master' ]]; then
            echo "target=latest" >> $GITHUB_OUTPUT
          else
            echo "target=beta" >> $GITHUB_OUTPUT
          fi

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies and build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          STRAPI_TOKEN: ${{ secrets.STRAPI_TOKEN }}
          STRAPI_URL: ${{ secrets.STRAPI_URL }}
        run: |
          # Install dependencies
          yarn install

          # Build
          yarn build

      - name: Deploy Assets to Cloudflare Pages
        id: cloudflare_deployment
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./packages/chain-list-assets/public --project-name=sw-chain-list-assets --branch=${{ github.ref_name }}
          gitHubToken: ${{ secrets.GH_AUTOMATION_TOKEN }}

      - name: Update build logo prefix with deployment URL
        if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/dev'
        env:
          CUSTOM_LOGO_PREFIX: ${{ steps.cloudflare_deployment.outputs.pages-deployment-alias-url }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          STRAPI_TOKEN: ${{ secrets.STRAPI_TOKEN }}
          STRAPI_URL: ${{ secrets.STRAPI_URL }}
        run: |
          yarn update-logo-url

      - name: Create tag
        id: create_tag
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git tag -a "v${{ steps.check_params.outputs.final_version }}" -m "Release version ${{ steps.check_params.outputs.final_version }}"
          git push origin "v${{ steps.check_params.outputs.final_version }}"

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Publish package
          cd packages/chain-list/build
          npm version --git-tag-version=false ${{ steps.check_params.outputs.final_version }}
          npm publish --access public --tag ${{ steps.check_params.outputs.target }}

      - name: Notify to Discord
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          username: Chain List Notifier
          title: ${{ github.workflow }}
          description: |
            The deployment of `${{ github.ref_name }}` has been completed.
            NPM Version: [${{ steps.check_params.outputs.final_version }}](https://www.npmjs.com/package/@subwallet/chain-list/v/${{ steps.check_params.outputs.final_version }})
            Event: ${{ github.event_name }}
            Commit message: ${{ github.event.head_commit.message }}
            Online assets: ${{ steps.cloudflare_deployment.outputs.pages-deployment-alias-url }}
